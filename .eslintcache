[{"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\index.js":"1","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\App.js":"2","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\globalStyles.js":"3","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\apis\\tmdb.js":"4","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\index.js":"5","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Header\\Header.jsx":"6","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Header\\Header.elements.js":"7","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Header\\Searchbar\\Searchbar.jsx":"8","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Sidebar\\Sidebar.jsx":"9","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Sidebar\\Sidebar.elements.js":"10","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Movies\\Movies.jsx":"11"},{"size":181,"mtime":1610621514497,"results":"12","hashOfConfig":"13"},{"size":2237,"mtime":1616110731004,"results":"14","hashOfConfig":"13"},{"size":717,"mtime":1615780662589,"results":"15","hashOfConfig":"13"},{"size":665,"mtime":1615953386943,"results":"16","hashOfConfig":"13"},{"size":163,"mtime":1615951217396,"results":"17","hashOfConfig":"13"},{"size":385,"mtime":1615952600187,"results":"18","hashOfConfig":"13"},{"size":273,"mtime":1615950261872,"results":"19","hashOfConfig":"13"},{"size":497,"mtime":1615952605929,"results":"20","hashOfConfig":"13"},{"size":953,"mtime":1616110921254,"results":"21","hashOfConfig":"13"},{"size":628,"mtime":1616125153597,"results":"22","hashOfConfig":"13"},{"size":664,"mtime":1615953915948,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1bmuqjl",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\index.js",[],["50","51"],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\App.js",["52"],"import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport GlobalStyles from './globalStyles';\r\nimport { Header, Sidebar, Movies } from './components';\r\nimport tmdb, { tmdbRequests } from './apis/tmdb';\r\n\r\n\r\nconst App = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [savedMovies, setSavedMovies] = useState([]);\r\n\r\n    const handleSearchMovie = async term => {\r\n        const { data } = await tmdb.get(tmdbRequests.searchMovie, {\r\n            params: {\r\n                query: term\r\n            }\r\n        });\r\n\r\n        setMovies(data.results);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <GlobalStyles />\r\n                <Header handleSearchMovie={handleSearchMovie} />\r\n                <div style={{ display: 'flex'}}>\r\n                    <Sidebar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Movies title=\"Trending\" fetchUrl={tmdbRequests.trending} movies={movies} onSetMovies={setMovies}/>\r\n                        </Route>\r\n                        <Route exact path=\"/favorites\" movies={savedMovies}>\r\n                            <Movies title=\"Favorites\" />\r\n                        </Route>\r\n                        <Route exact path=\"/upcoming\">\r\n                            <Movies title=\"Upcoming\" fetchUrl={tmdbRequests.upcomingMovies} movies={movies} onSetMovies={setMovies}/>\r\n                        </Route>\r\n                        <Route exact path=\"/top-rated\">\r\n                            <Movies title=\"Top Rated\" fetchUrl={tmdbRequests.topRatedMovies} movies={movies} onSetMovies={setMovies}/>\r\n                        </Route>\r\n                        <Route exact path=\"/now-showing\">\r\n                            <Movies title=\"Now Showing\" fetchUrl={tmdbRequests.nowPlayingMovies} movies={movies} onSetMovies={setMovies}/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;\r\n\r\n// TODO: \r\n\r\n// REDO EVERY THING\r\n// 2. Add more to tool bar such as welcome guest text\r\n// 3. Movies based off categories\r\n// 4. watchlist","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\globalStyles.js",["53"],"import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    :root {\r\n        --midnight: #052439;\r\n        --white: #fafafa;\r\n    }\r\n\r\n    *, \r\n    *::before,\r\n    *::after {\r\n        padding: 0;\r\n        margin: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    html {\r\n        font-size: 62.5%; // 10px for easier rem sizing\r\n    }\r\n    body {\r\n        font-family: 'Open Sans', sans-serif;\r\n        font-weight: 400;\r\n        line-height: 1.4;\r\n        background: #fafafa;\r\n        color: #3c3c3c;\r\n    }\r\n    a { \r\n        color: inherit;\r\n        text-decoration: none;\r\n    }\r\n    li {\r\n        list-style: none;\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\nexport default GlobalStyles;","C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\apis\\tmdb.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\index.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Header\\Header.elements.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Header\\Searchbar\\Searchbar.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Sidebar\\Sidebar.jsx",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Sidebar\\Sidebar.elements.js",[],"C:\\Users\\rumie\\Desktop\\WORKSPACES\\web_development\\projects\\watchlist\\src\\components\\Movies\\Movies.jsx",["54","55"],"import React, { useState, useEffect } from 'react'\r\nimport tmdb from '../../apis/tmdb';\r\n\r\nconst Movies = ({ title, fetchUrl, movies, onSetMovies }) => {\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [fetchUrl]);\r\n\r\n    const fetchMovies = async () => {\r\n        const { data } = await tmdb.get(fetchUrl);\r\n        onSetMovies(data.results);\r\n    };\r\n\r\n    console.log(movies);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            {\r\n                movies && movies.map( movie => (\r\n                    <h3 key={movie.id}>{movie.title}</h3>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":10,"column":25,"nodeType":"62","messageId":"63","endLine":10,"endColumn":39},{"ruleId":"60","severity":1,"message":"64","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":14},{"ruleId":"60","severity":1,"message":"65","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":8,"column":8,"nodeType":"68","endLine":8,"endColumn":18,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'setSavedMovies' is assigned a value but never used.","Identifier","unusedVar","'styled' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [fetchMovies, fetchUrl]",{"range":"75","text":"76"},[211,221],"[fetchMovies, fetchUrl]"]